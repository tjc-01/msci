"""Functions for plotting."""
import matplotlib.pyplot as plt
import numpy as np

import tracksim.consts as consts


# TODO: figure out sensible return type (axes maybe?)
def plot_tracks(tracks: dict):
    """Plots a series of tracks with matplotlib.

    Args:
        tracks (list): Tracks object as generated by
            tracksim.gen.TrackGenerator.generate_tracks().This must be passed as a
            dictionary and not JSON string as is produced by the method.

    Returns: TODO

    """
    fig, ax = plt.subplots()
    for track in tracks["tracks"]:
        if len(track["hits"]):
            x, y, _, _ = np.array(track["hits"]).transpose().tolist()
            ax.scatter(x, y)

    detector_outline = plt.Circle(  # pyright: ignore
        (0, 0), consts.detector["rad"], fill=False
    )
    ax.scatter([1], [1])
    ax.add_patch(detector_outline)
    ax.set_xlabel("x (m)")
    ax.set_ylabel("y (m)")
    ax.set_title(tracks["particle_count"])
    plt.show()
